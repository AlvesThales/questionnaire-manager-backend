// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionnaireManager.Data;

#nullable disable

namespace QuestionnaireManager.Data.Migrations
{
    [DbContext(typeof(QuestionnaireManagerContext))]
    [Migration("20230809165432_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuestionnaireManager.Domain.Model.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentQuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentQuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("QuestionnaireManager.Domain.Model.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRoot")
                        .HasColumnType("bit");

                    b.Property<int>("ParentAnswerId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId")
                        .IsUnique();

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuestionnaireManager.Domain.Model.Questionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("HasRoot")
                        .HasColumnType("bit");

                    b.Property<int>("MaxAnswers")
                        .HasColumnType("int");

                    b.Property<int>("MaxQuestions")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questionnaires");
                });

            modelBuilder.Entity("QuestionnaireManager.Domain.Model.Answer", b =>
                {
                    b.HasOne("QuestionnaireManager.Domain.Model.Question", "ParentQuestion")
                        .WithMany("Answers")
                        .HasForeignKey("ParentQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentQuestion");
                });

            modelBuilder.Entity("QuestionnaireManager.Domain.Model.Question", b =>
                {
                    b.HasOne("QuestionnaireManager.Domain.Model.Answer", "ParentAnswer")
                        .WithOne("ChildQuestion")
                        .HasForeignKey("QuestionnaireManager.Domain.Model.Question", "AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionnaireManager.Domain.Model.Questionnaire", null)
                        .WithMany("Questions")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentAnswer");
                });

            modelBuilder.Entity("QuestionnaireManager.Domain.Model.Answer", b =>
                {
                    b.Navigation("ChildQuestion");
                });

            modelBuilder.Entity("QuestionnaireManager.Domain.Model.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("QuestionnaireManager.Domain.Model.Questionnaire", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
